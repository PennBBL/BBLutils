#set default variables
startnum=1
uninspected=0
review_excludes=0

#useage
function Usage {
    cat <<USAGE
Usage:
  -v:  Visual qa file generated by QA.R. Required.
  -p:  Protocol name as on monsturm (i.e. "eons_xnat"). Required.
  -f:  Path from subject dir to standard space image. Required.
  -n:  Start on subject number x. Default = 1
  -u:  Show only uninspected participants. Default = 0
  -e:  Review only excludes. Default = 0
Example: ./visual_qa_loop.sh -v /import/monstrum/tripod/scripts/4letter3bk/QA/automated/test_visual.csv -p tripod -f "*_bbl1_4letter3bk1_300/first_level.feat/reg/example_func2standard.nii.gz"
USAGE
    exit 1
}

#check for args
[ $# -lt 1 ] && Usage

# reading command line arguments
while getopts ":v:p:n:f:ueh" OPT
	do
	case $OPT in
		h) #help
		Usage >&2
		exit 0
		;;
		v) #visual qa file
		qa_file=$OPTARG
		;;
		p) #protocol name
		study=$OPTARG
		;;
		n) #start number
		startnum=$OPTARG
		;;
		u) #only uninspected
		uninspected=1
		;;
		f) #path to files
		filepath=$OPTARG
		;;
		e) #review only excludes
		review_excludes=1
		;;
		\?) # getopts issues an error message
		Usage >&2
		exit 1
		;;
	esac
done

echo starting on number: $startnum

#check for required arguments
[ -z $qa_file ] || [ -z $study ] || [ -z $filepath ] && echo "Visual qa file, protocol name, and file path are required." && Usage
[ $uninspected == 1 ] && [ $review_excludes == 1 ] && echo "Show only uninspected and review excluded cannont be used together. Only inspected scans can be excluded." && Usage

startnum2=`echo $startnum + 1 | bc`

for i in `cat $qa_file | sed -n $startnum2,'$'p`
do

	bblid=`echo $i | cut -d "," -f 1`
	scanid=`echo $i | cut -d "," -f 2`
	inspected=`echo $i | cut -d "," -f 4`
	visual_inspection_exclude=`echo $i | cut -d "," -f 5`

	[ $uninspected == 1 ] && [ $inspected == 1 ] && startnum=`echo $startnum + 1 | bc` && continue
	[ $review_excludes == 1 ] && [ $visual_inspection_exclude == 0 ] && startnum=`echo $startnum + 1 | bc` && continue

	echo "*********"$bblid,$scanid,$startnum
	startnum=`echo $startnum + 1 | bc`

	scan=`ls  /import/monstrum/$study/subjects/$bblid"_"$scanid/$filepath 2> /dev/null`
	#[ -z $scan ] && scan=`ls  /import/monstrum/$study/subjects/$bblid"_"$scanid/*_ep2d_se_pcasl_PHC_1200ms/quant_no_dico/reg_std_ants/cbf_map_no_dico_2mm.nii.gz 2> /dev/null`

	[ -z $scan ] && echo "Error: no scan found for $bblid" && continue

	fslview $FSLDIR/data/standard/MNI152_T1_2mm_brain.nii.gz $scan -l "Red-Yellow"

	if [ $review_excludes == 0 ];then
		echo "Exclude? 0 - no, 1 - yes"
		read qa
		sed -i s/$i/"$bblid,$scanid,1,1,$qa"/g $qa_file
	fi
done
