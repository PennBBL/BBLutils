####this was an error and should not be run
exit

#fslval <niftifile> descrip
#nifty_set_descrip.sh
#get_FSLslicetime2.sh
#FSL's slicetimer

#testing_mode=echo

#useage
function Usage {
	cat <<USAGE
Usage:
  -a:  full path to Audit file, generated by an xnat_audit.py. Required.
  -p:  Protocol name as on monstrum. Required.
  -n:  Niftis, as in audit header. Required
  -e:  Email address for error reporting.
  -r:  Redcap protocol name for automatic uploading.
  -s:  Scanid
  -t:  Testing mode.

USAGE
	exit 1
}

###set defaults
overwrite=0
singlesubject=0
all_dicoms=""
redcap_name=""
email=""
day=`date +%m_%d_%y`

###check for args
[ $# -lt 1 ] && Usage

# reading command line arguments
while getopts ":a:p:n:s:he:tr:" OPT
	do
	case $OPT in
		h) #help
		Usage >&2
		exit 0
		;;
		a) #audit file
		audit_file=$OPTARG
		;;
		p) #protocol name as on monstrum
		protocol=$OPTARG
		;;
		e) #email address for error reporting
		email=$OPTARG
		;;
		r) #name of redcap project for automated uploading
		redcap_name=$OPTARG
		;;
		t) #testing mode
		testing=1
		;;
		n) #nifti
		nifti=`echo $nifti $OPTARG`
		;;
		s) #scanid
		singlesubject=1
		scanid=$OPTARG
		;;
		\?) # getopts issues an error message
		Usage >&2
		exit 1
		;;
	esac
done

###check for required arguments
errors=""
[ -z $audit_file ] || [ -z $protocol ] || [ "X$nifti" == "X" ] && errors=`echo $errors "One or more required arguments missing."`
[ ! -e $audit_file ] && errors=`echo $errors "Audit file not found."`
[ ! -e /import/monstrum/$protocol ] && errors=`echo $errors "Protocol folder not found."`

###check for dependencies
[ ! -e $FSLDIR/bin/fslval ] || [ ! -e /import/speedy/scripts/bin/get_FSLslicetime2.sh ] || [ ! -e $FSLDIR/bin/slicetimer ] && errors=`echo $errors "Missing one or more of fslval, get_FSLslicetime2.sh, or slicetimer."`

###set up log paths
if [ -e /import/monstrum/$protocol ];then
	mkdir -p /import/monstrum/$protocol/logs
	error_path=/import/monstrum/$protocol/logs/download_error_log.txt
	[ -e $error_path ] && rm -f $error_path
fi

###if any errors, exit
if [ ! -z "$errors" ];then 
	echo $errors 
	[ "$error_path" != "/error_log.txt" ] && echo $errors > $error_path 
	Usage
fi

###get names of scans from audit header, assign field numbers from header
header=`cat $audit_file | sed -n 1p | tr "," " "`
scans=""
field_num=1
for field in $header
do
	[ "$field" != "subject" ] && [ "$field" != "bblid" ] && [ "$field" != "doscan" ] && scans=`echo $scans $field`
	declare $field=$field_num
	((field_num++))
done
scans=`echo $scans | sed s/'^ '//g`

echo nifti: $nifti
echo scans: $scans

###check that specified niftis are in header
scans_test=`echo " $scans "`
find_nifti_error=0
for nifti_test in $nifti
do
	[[ ! $scans_test == *" $nifti_test "* ]] && echo $nifti_test not found in audit header. Please check spelling and capitalization. && find_nifti_error=1
done
[ $find_nifti_error == 1 ] && echo "" && Usage

####remove old error log####
############################
[ $singlesubject == 0 ] && rm -f /import/monstrum/$protocol/logs/nifti_subject_errors.csv

####get subject list####
########################
[ $singlesubject == 0 ] && slist=`cat $audit_file | sed -n 2,'$'p`
[ $singlesubject == 1 ] && slist=`cat $audit_file | grep $1`

#####loop over subjects#####
############################
for i in $slist
do
echo $i

#get scanid, shortened scanid (- 00), bblid, make id, and has_scantype variables
scanid=`echo $i | cut -d "," -f $subject`
scanid_short=`echo $scanid | sed 's/^0*//'`
subjectbblid=`echo $i | cut -d "," -f $bblid | sed 's/^0*//'`

#get values for has_scan
	for scan in $nifti
	do
		value=`echo $i | cut -d "," -f ${!scan}`
		declare has_"$scan"=$value	
	done

id=`echo $subjectbblid"_"$scanid_short`
downloaddir=/import/monstrum/$protocol/subjects/
subdir=$downloaddir/$id

#for each subject, check if their scan folders are empty and if they should have data based on the eons3 file, if they should have data, set process=1. If they do have data, just skip to the next scan type (this way we aren't constantly re-downloading data). 
echo "******************"$id"******************************"


#fslval 009455_11_bbl1_idemo2_210_v4auto.nii descrip
#C 2015-05-27 by hopsonr W d2n_v4.3, T BOLD_RPI.
#comment added if slicetime done: SLICETIME CORRECTED.
#get_FSLslicetime2.sh ../dicoms/009455_11_bbl1_idemo2_210_v4auto_exampledicom.DCM test_slicetime_output.txt
#slicetimer -i 009455_11_bbl1_idemo2_210_v4auto.nii -o 009455_11_bbl1_idemo2_210_v4auto_stc --tcustom=test_slicetime_output.txt

done




